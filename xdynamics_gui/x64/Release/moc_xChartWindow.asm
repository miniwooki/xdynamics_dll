; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27034.0 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

EXTRN	__imp_?staticMetaObject@QMainWindow@@2UQMetaObject@@B:BYTE
CONST	SEGMENT
?qt_meta_stringdata_xChartWindow@@3Uqt_meta_stringdata_xChartWindow_t@@B DD 0ffffffffH ; qt_meta_stringdata_xChartWindow
	DD	0cH
	DD	00H
	ORG $+4
	DQ	00000000000000a8H
	DD	0ffffffffH
	DD	010H
	DD	00H
	ORG $+4
	DQ	000000000000009dH
	DD	0ffffffffH
	DD	00H
	DD	00H
	ORG $+4
	DQ	0000000000000096H
	DD	0ffffffffH
	DD	01aH
	DD	00H
	ORG $+4
	DQ	000000000000007fH
	DD	0ffffffffH
	DD	014H
	DD	00H
	ORG $+4
	DQ	0000000000000082H
	DD	0ffffffffH
	DD	01H
	DD	00H
	ORG $+4
	DQ	000000000000007fH
	DD	0ffffffffH
	DD	0eH
	DD	00H
	ORG $+4
	DQ	0000000000000069H
	DB	078H
	DB	043H
	DB	068H
	DB	061H
	DB	072H
	DB	074H
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	00H
	DB	075H
	DB	070H
	DB	064H
	DB	061H
	DB	074H
	DB	065H
	DB	054H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	049H
	DB	074H
	DB	065H
	DB	06dH
	DB	00H
	DB	00H
	DB	063H
	DB	06cH
	DB	069H
	DB	063H
	DB	06bH
	DB	05fH
	DB	070H
	DB	061H
	DB	073H
	DB	073H
	DB	069H
	DB	06eH
	DB	067H
	DB	05fH
	DB	064H
	DB	069H
	DB	073H
	DB	074H
	DB	072H
	DB	069H
	DB	062H
	DB	075H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	DB	050H
	DB	06cH
	DB	06fH
	DB	074H
	DB	046H
	DB	072H
	DB	06fH
	DB	06dH
	DB	043H
	DB	06fH
	DB	06dH
	DB	062H
	DB	06fH
	DB	042H
	DB	06fH
	DB	078H
	DB	049H
	DB	074H
	DB	065H
	DB	06dH
	DB	00H
	DB	069H
	DB	00H
	DB	065H
	DB	064H
	DB	069H
	DB	074H
	DB	069H
	DB	06eH
	DB	067H
	DB	043H
	DB	06fH
	DB	06dH
	DB	06dH
	DB	061H
	DB	06eH
	DB	064H
	DB	00H
	ORG $+8
?qt_meta_data_xChartWindow@@3QBIB DD 08H		; qt_meta_data_xChartWindow
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	0eH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	03H
	DD	027H
	DD	02H
	DD	0aH
	DD	03H
	DD	00H
	DD	02eH
	DD	02H
	DD	08H
	DD	04H
	DD	01H
	DD	02fH
	DD	02H
	DD	08H
	DD	04H
	DD	00H
	DD	032H
	DD	02H
	DD	028H
	DD	06H
	DD	00H
	DD	033H
	DD	02H
	DD	08H
	DD	02bH
	DD	02H
	DD	0aH
	DD	0bH
	DD	02H
	DD	02H
	DD	02H
	DD	02bH
	DD	02bH
	DD	02H
	DD	05H
	DD	02bH
	DD	02bH
	DD	00H
CONST	ENDS
PUBLIC	??0?$QList@VQString@@@@QEAA@AEBV0@@Z		; QList<QString>::QList<QString>
PUBLIC	?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z ; QList<QString>::node_copy
PUBLIC	?metaObject@xChartWindow@@UEBAPEBUQMetaObject@@XZ ; xChartWindow::metaObject
PUBLIC	?qt_metacast@xChartWindow@@UEAAPEAXPEBD@Z	; xChartWindow::qt_metacast
PUBLIC	?qt_metacall@xChartWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z ; xChartWindow::qt_metacall
PUBLIC	?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z ; xChartWindow::qt_static_metacall
PUBLIC	?staticMetaObject@xChartWindow@@2UQMetaObject@@B ; xChartWindow::staticMetaObject
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp_??0QString@@QEAA@AEBV0@@Z:PROC
EXTRN	__imp_??1QString@@QEAA@XZ:PROC
EXTRN	__imp_?detach@QListData@@QEAAPEAUData@1@H@Z:PROC
EXTRN	__imp_?dispose@QListData@@SAXPEAUData@1@@Z:PROC
EXTRN	__imp_?begin@QListData@@QEBAPEAPEAXXZ:PROC
EXTRN	__imp_?end@QListData@@QEBAPEAPEAXXZ:PROC
EXTRN	__imp_?dynamicMetaObject@QObjectData@@QEBAPEAUQMetaObject@@XZ:PROC
EXTRN	__imp_?qt_metacast@QMainWindow@@UEAAPEAXPEBD@Z:PROC
EXTRN	__imp_?qt_metacall@QMainWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z:PROC
EXTRN	?updateTargetItem@xChartWindow@@QEAAXHVQString@@VQStringList@@@Z:PROC ; xChartWindow::updateTargetItem
EXTRN	?click_passing_distribution@xChartWindow@@AEAAXXZ:PROC ; xChartWindow::click_passing_distribution
EXTRN	?PlotFromComboBoxItem@xChartWindow@@AEAAXH@Z:PROC ; xChartWindow::PlotFromComboBoxItem
EXTRN	?editingCommand@xChartWindow@@AEAAXXZ:PROC	; xChartWindow::editingCommand
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__ImageBase:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GQString@@QEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+53
	DD	imagerel $unwind$??_GQString@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$QList@VQString@@@@QEAA@AEBV0@@Z DD imagerel $LN67
	DD	imagerel $LN67+166
	DD	imagerel $unwind$??0?$QList@VQString@@@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA DD imagerel ?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA
	DD	imagerel ?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA+36
	DD	imagerel $unwind$?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$QList@VQString@@@@QEAA@XZ DD imagerel $LN89
	DD	imagerel $LN89+141
	DD	imagerel $unwind$??1?$QList@VQString@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dealloc@?$QList@VQString@@@@AEAAXPEAUData@QListData@@@Z DD imagerel $LN26
	DD	imagerel $LN26+91
	DD	imagerel $unwind$?dealloc@?$QList@VQString@@@@AEAAXPEAUData@QListData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z DD imagerel $LN49
	DD	imagerel $LN49+94
	DD	imagerel $unwind$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA DD imagerel ?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA
	DD	imagerel ?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA+60
	DD	imagerel $unwind$?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?node_destruct@?$QList@VQString@@@@AEAAXPEAUNode@1@0@Z DD imagerel $LN25
	DD	imagerel $LN25+61
	DD	imagerel $unwind$?node_destruct@?$QList@VQString@@@@AEAAXPEAUNode@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0QStringList@@QEAA@AEBV0@@Z DD imagerel $LN6
	DD	imagerel $LN6+23
	DD	imagerel $unwind$??0QStringList@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?qt_metacall@xChartWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z DD imagerel $LN10
	DD	imagerel $LN10+112
	DD	imagerel $unwind$?qt_metacall@xChartWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z DD imagerel $LN20
	DD	imagerel $LN20+183
	DD	imagerel $unwind$?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
pdata	ENDS
CRT$XCU	SEGMENT
??staticMetaObject$initializer$@xChartWindow@@2P6AXXZEA@@3P6AXXZEA DQ FLAT:??__E?staticMetaObject@xChartWindow@@2UQMetaObject@@B@@YAXXZ ; ??staticMetaObject$initializer$@xChartWindow@@2P6AXXZEA@@3P6AXXZEA
CRT$XCU	ENDS
_DATA	SEGMENT
?staticMetaObject@xChartWindow@@2UQMetaObject@@B DB 8 DUP(00H) ; xChartWindow::staticMetaObject
	DQ	FLAT:?qt_meta_stringdata_xChartWindow@@3Uqt_meta_stringdata_xChartWindow_t@@B
	DQ	FLAT:?qt_meta_data_xChartWindow@@3QBIB
	DQ	FLAT:?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
	DQ	0000000000000000H
	DQ	0000000000000000H
_DATA	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z DD 041201H
	DD	083412H
	DD	0700e5212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?qt_metacall@xChartWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0QStringList@@QEAA@AEBV0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?node_destruct@?$QList@VQString@@@@AEAAXPEAUNode@1@0@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA DD 040c19H
	DD	07008320cH
	DD	030065007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z DD imagerel ?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA+54
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z
	DD	01H
	DD	imagerel $tryMap$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z
	DD	01H
	DD	imagerel $ip2state$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z DD 061d19H
	DD	0b641dH
	DD	083418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dealloc@?$QList@VQString@@@@AEAAXPEAUData@QListData@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$QList@VQString@@@@QEAA@XZ DD imagerel ??1?$QList@VQString@@@@QEAA@XZ+118
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$QList@VQString@@@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$QList@VQString@@@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$QList@VQString@@@@QEAA@XZ DD 061919H
	DD	096419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$QList@VQString@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$QList@VQString@@@@QEAA@AEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$QList@VQString@@@@QEAA@AEBV0@@Z DD imagerel ??0?$QList@VQString@@@@QEAA@AEBV0@@Z+89
	DD	0ffffffffH
	DD	imagerel ??0?$QList@VQString@@@@QEAA@AEBV0@@Z+141
	DD	00H
	DD	imagerel ?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA+20
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??0?$QList@VQString@@@@QEAA@AEBV0@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??0?$QList@VQString@@@@QEAA@AEBV0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??0?$QList@VQString@@@@QEAA@AEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$QList@VQString@@@@QEAA@AEBV0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$QList@VQString@@@@QEAA@AEBV0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0?$QList@VQString@@@@QEAA@AEBV0@@Z
	DD	01H
	DD	imagerel $tryMap$??0?$QList@VQString@@@@QEAA@AEBV0@@Z
	DD	03H
	DD	imagerel $ip2state$??0?$QList@VQString@@@@QEAA@AEBV0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$QList@VQString@@@@QEAA@AEBV0@@Z DD 061d19H
	DD	0a641dH
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$QList@VQString@@@@QEAA@AEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GQString@@QEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$load@H@?$QAtomicOps@H@@SAHAEBU?$atomic@H@std@@@Z
_TEXT	SEGMENT
_q_value$ = 8
??$load@H@?$QAtomicOps@H@@SAHAEBU?$atomic@H@std@@@Z PROC ; QAtomicOps<int>::load<int>, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1360
	mov	eax, DWORD PTR [rcx]
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; Line 228
	ret	0
??$load@H@?$QAtomicOps@H@@SAHAEBU?$atomic@H@std@@@Z ENDP ; QAtomicOps<int>::load<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ref@H@?$QAtomicOps@H@@SA_NAEAU?$atomic@H@std@@@Z
_TEXT	SEGMENT
_q_value$ = 8
??$ref@H@?$QAtomicOps@H@@SA_NAEAU?$atomic@H@std@@@Z PROC ; QAtomicOps<int>::ref<int>, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	lock add DWORD PTR [rcx], 1
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; Line 266
	setne	al
	ret	0
??$ref@H@?$QAtomicOps@H@@SA_NAEAU?$atomic@H@std@@@Z ENDP ; QAtomicOps<int>::ref<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$deref@H@?$QAtomicOps@H@@SA_NAEAU?$atomic@H@std@@@Z
_TEXT	SEGMENT
_q_value$ = 8
??$deref@H@?$QAtomicOps@H@@SA_NAEAU?$atomic@H@std@@@Z PROC ; QAtomicOps<int>::deref<int>, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	mov	eax, -1
	lock xadd DWORD PTR [rcx], eax
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; Line 271
	cmp	eax, 1
	setne	al
; Line 272
	ret	0
??$deref@H@?$QAtomicOps@H@@SA_NAEAU?$atomic@H@std@@@Z ENDP ; QAtomicOps<int>::deref<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__E?staticMetaObject@xChartWindow@@2UQMetaObject@@B@@YAXXZ
text$di	SEGMENT
??__E?staticMetaObject@xChartWindow@@2UQMetaObject@@B@@YAXXZ PROC ; `dynamic initializer for 'xChartWindow::staticMetaObject'', COMDAT
; File c:\xdynamics\xdynamics_gui\generatedfiles\release\moc_xchartwindow.cpp
; Line 96
	mov	rax, QWORD PTR __imp_?staticMetaObject@QMainWindow@@2UQMetaObject@@B
	mov	QWORD PTR ?staticMetaObject@xChartWindow@@2UQMetaObject@@B, rax
; Line 101
	ret	0
??__E?staticMetaObject@xChartWindow@@2UQMetaObject@@B@@YAXXZ ENDP ; `dynamic initializer for 'xChartWindow::staticMetaObject''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_o$ = 64
_c$ = 72
_id$ = 80
_a$ = 88
?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z PROC ; xChartWindow::qt_static_metacall, COMDAT
; File c:\xdynamics\xdynamics_gui\generatedfiles\release\moc_xchartwindow.cpp
; Line 80
$LN20:
; Line 81
	test	edx, edx
	jne	$LN17@qt_static_
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 80
	mov	rdi, r9
	mov	rbx, rcx
; Line 84
	test	r8d, r8d
	je	SHORT $LN5@qt_static_
	sub	r8d, 1
	je	SHORT $LN6@qt_static_
	sub	r8d, 1
	je	SHORT $LN7@qt_static_
	sub	r8d, 1
	je	SHORT $LN8@qt_static_
	cmp	r8d, 1
	jne	SHORT $LN10@qt_static_
; Line 93
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
; Line 89
	jmp	?editingCommand@xChartWindow@@AEAAXXZ	; xChartWindow::editingCommand
$LN8@qt_static_:
; Line 88
	xor	edx, edx
; Line 93
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
; Line 88
	jmp	?PlotFromComboBoxItem@xChartWindow@@AEAAXH@Z ; xChartWindow::PlotFromComboBoxItem
$LN7@qt_static_:
; Line 87
	mov	rax, QWORD PTR [r9+8]
	mov	edx, DWORD PTR [rax]
; Line 93
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
; Line 87
	jmp	?PlotFromComboBoxItem@xChartWindow@@AEAAXH@Z ; xChartWindow::PlotFromComboBoxItem
$LN6@qt_static_:
; Line 93
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
; Line 86
	jmp	?click_passing_distribution@xChartWindow@@AEAAXXZ ; xChartWindow::click_passing_distribution
$LN5@qt_static_:
	mov	rdx, QWORD PTR [r9+24]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$QList@VQString@@@@QEAA@AEBV0@@Z	; QList<QString>::QList<QString>
; Line 85
	mov	rdx, QWORD PTR [rdi+16]
	lea	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0QString@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR [rdi+8]
	lea	r9, QWORD PTR $T1[rsp]
	mov	r8, rax
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rbx
	call	?updateTargetItem@xChartWindow@@QEAAXHVQString@@VQStringList@@@Z ; xChartWindow::updateTargetItem
$LN10@qt_static_:
; Line 93
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
$LN17@qt_static_:
	ret	0
?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z ENDP ; xChartWindow::qt_static_metacall
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?qt_metacall@xChartWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
_c$ = 56
_id$ = 64
_a$ = 72
?qt_metacall@xChartWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z PROC ; xChartWindow::qt_metacall, COMDAT
; File c:\xdynamics\xdynamics_gui\generatedfiles\release\moc_xchartwindow.cpp
; Line 119
$LN10:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, r9
	mov	edi, edx
	mov	rbp, rcx
; Line 120
	call	QWORD PTR __imp_?qt_metacall@QMainWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z
	mov	ebx, eax
; Line 121
	test	eax, eax
	js	SHORT $LN1@qt_metacal
; Line 123
	test	edi, edi
	jne	SHORT $LN3@qt_metacal
; Line 124
	cmp	eax, 5
	jge	SHORT $LN7@qt_metacal
; Line 125
	mov	r9, rsi
	mov	r8d, eax
	xor	edx, edx
	mov	rcx, rbp
	call	?qt_static_metacall@xChartWindow@@CAXPEAVQObject@@W4Call@QMetaObject@@HPEAPEAX@Z ; xChartWindow::qt_static_metacall
; Line 126
	jmp	SHORT $LN7@qt_metacal
$LN3@qt_metacal:
; Line 127
	cmp	edi, 12
	jne	SHORT $LN6@qt_metacal
; Line 128
	cmp	ebx, 5
	jge	SHORT $LN7@qt_metacal
; Line 129
	mov	rax, QWORD PTR [rsi]
	mov	DWORD PTR [rax], -1
$LN7@qt_metacal:
; Line 132
	sub	ebx, 5
$LN6@qt_metacal:
	mov	eax, ebx
$LN1@qt_metacal:
; Line 133
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?qt_metacall@xChartWindow@@UEAAHW4Call@QMetaObject@@HPEAPEAX@Z ENDP ; xChartWindow::qt_metacall
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?qt_metacast@xChartWindow@@UEAAPEAXPEBD@Z
_TEXT	SEGMENT
this$ = 8
_clname$ = 16
?qt_metacast@xChartWindow@@UEAAPEAXPEBD@Z PROC		; xChartWindow::qt_metacast, COMDAT
; File c:\xdynamics\xdynamics_gui\generatedfiles\release\moc_xchartwindow.cpp
; Line 111
	mov	r9, rdx
	mov	r10, rcx
; Line 112
	test	rdx, rdx
	jne	SHORT $LN2@qt_metacas
	xor	eax, eax
; Line 116
	ret	0
$LN2@qt_metacas:
; Line 113
	lea	r8, OFFSET FLAT:?qt_meta_stringdata_xChartWindow@@3Uqt_meta_stringdata_xChartWindow_t@@B+168
	mov	rax, r9
	sub	r8, r9
	npad	5
$LL5@qt_metacas:
	movzx	edx, BYTE PTR [rax]
	movzx	ecx, BYTE PTR [rax+r8]
	sub	edx, ecx
	jne	SHORT $LN6@qt_metacas
	inc	rax
	test	ecx, ecx
	jne	SHORT $LL5@qt_metacas
$LN6@qt_metacas:
	test	edx, edx
	jne	SHORT $LN3@qt_metacas
; Line 114
	mov	rax, r10
; Line 116
	ret	0
$LN3@qt_metacas:
; Line 115
	mov	rdx, r9
	mov	rcx, r10
	rex_jmp	QWORD PTR __imp_?qt_metacast@QMainWindow@@UEAAPEAXPEBD@Z
?qt_metacast@xChartWindow@@UEAAPEAXPEBD@Z ENDP		; xChartWindow::qt_metacast
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?metaObject@xChartWindow@@UEBAPEBUQMetaObject@@XZ
_TEXT	SEGMENT
this$ = 8
?metaObject@xChartWindow@@UEBAPEBUQMetaObject@@XZ PROC	; xChartWindow::metaObject, COMDAT
; File c:\xdynamics\xdynamics_gui\generatedfiles\release\moc_xchartwindow.cpp
; Line 107
	mov	rcx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx+40], 0
	je	SHORT $LN3@metaObject
	rex_jmp	QWORD PTR __imp_?dynamicMetaObject@QObjectData@@QEBAPEAUQMetaObject@@XZ
$LN3@metaObject:
	lea	rax, OFFSET FLAT:?staticMetaObject@xChartWindow@@2UQMetaObject@@B ; xChartWindow::staticMetaObject
; Line 108
	ret	0
?metaObject@xChartWindow@@UEBAPEBUQMetaObject@@XZ ENDP	; xChartWindow::metaObject
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??C?$QScopedPointer@VQObjectData@@U?$QScopedPointerDeleter@VQObjectData@@@@@@QEBAPEAVQObjectData@@XZ
_TEXT	SEGMENT
this$ = 8
??C?$QScopedPointer@VQObjectData@@U?$QScopedPointerDeleter@VQObjectData@@@@@@QEBAPEAVQObjectData@@XZ PROC ; QScopedPointer<QObjectData,QScopedPointerDeleter<QObjectData> >::operator->, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qscopedpointer.h
; Line 118
	mov	rax, QWORD PTR [rcx]
; Line 119
	ret	0
??C?$QScopedPointer@VQObjectData@@U?$QScopedPointerDeleter@VQObjectData@@@@@@QEBAPEAVQObjectData@@XZ ENDP ; QScopedPointer<QObjectData,QScopedPointerDeleter<QObjectData> >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0QStringList@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0QStringList@@QEAA@AEBV0@@Z PROC			; QStringList::QStringList, COMDAT
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??0?$QList@VQString@@@@QEAA@AEBV0@@Z	; QList<QString>::QList<QString>
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0QStringList@@QEAA@AEBV0@@Z ENDP			; QStringList::QStringList
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1QStringList@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1QStringList@@QEAA@XZ PROC				; QStringList::~QStringList, COMDAT
	jmp	??1?$QList@VQString@@@@QEAA@XZ		; QList<QString>::~QList<QString>
??1QStringList@@QEAA@XZ ENDP				; QStringList::~QStringList
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?node_destruct@?$QList@VQString@@@@AEAAXPEAUNode@1@0@Z
_TEXT	SEGMENT
this$ = 48
from$ = 56
to$ = 64
?node_destruct@?$QList@VQString@@@@AEAAXPEAUNode@1@0@Z PROC ; QList<QString>::node_destruct, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qlist.h
; Line 495
$LN25:
; Line 499
	cmp	r8, rdx
	je	SHORT $LN22@node_destr
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 495
	mov	rbx, r8
	mov	rdi, rdx
	npad	11
$LL19@node_destr:
; Line 499
	sub	rbx, 8
	mov	rcx, rbx
	call	QWORD PTR __imp_??1QString@@QEAA@XZ
	cmp	rbx, rdi
	jne	SHORT $LL19@node_destr
; Line 500
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN22@node_destr:
	ret	0
?node_destruct@?$QList@VQString@@@@AEAAXPEAUNode@1@0@Z ENDP ; QList<QString>::node_destruct
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
from$ = 72
current$ = 80
to$ = 80
src$ = 88
?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z PROC ; QList<QString>::node_copy, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qlist.h
; Line 460
$LN49:
	mov	QWORD PTR [rsp+16], rdx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T1[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+88], rsi
	mov	rdi, r9
	mov	rsi, r8
	mov	rbx, rdx
; Line 461
	mov	QWORD PTR current$[rsp], rdx
; Line 477
	cmp	rdx, r8
	je	SHORT $LN7@node_copy
	sub	rdi, rdx
$LL6@node_copy:
; Line 478
	lea	rdx, QWORD PTR [rdi+rbx]
	mov	rcx, rbx
	call	QWORD PTR __imp_??0QString@@QEAA@AEBV0@@Z
; Line 479
	add	rbx, 8
	mov	QWORD PTR current$[rsp], rbx
; Line 477
	cmp	rbx, rsi
	jne	SHORT $LL6@node_copy
$LN7@node_copy:
; Line 491
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN47@node_copy:
?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z ENDP ; QList<QString>::node_copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
from$ = 72
current$ = 80
to$ = 80
src$ = 88
?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA PROC ; `QList<QString>::node_copy'::`1'::catch$0
; Line 482
	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z$2:
; Line 483
	mov	rbx, QWORD PTR current$[rbp]
	mov	rdi, QWORD PTR from$[rbp]
	cmp	rbx, rdi
	je	SHORT $LN41@catch$0
	npad	4
$LL42@catch$0:
	sub	rbx, 8
	mov	rcx, rbx
	call	QWORD PTR __imp_??1QString@@QEAA@XZ
	cmp	rbx, rdi
	jne	SHORT $LL42@catch$0
$LN41@catch$0:
; Line 485
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA ENDP ; `QList<QString>::node_copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
from$ = 72
current$ = 80
to$ = 80
src$ = 88
?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA PROC ; `QList<QString>::node_copy'::`1'::catch$0
; Line 482
	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z$2:
; Line 483
	mov	rbx, QWORD PTR current$[rbp]
	mov	rdi, QWORD PTR from$[rbp]
	cmp	rbx, rdi
	je	SHORT $LN41@catch$0
	npad	4
$LL42@catch$0:
	sub	rbx, 8
	mov	rcx, rbx
	call	QWORD PTR __imp_??1QString@@QEAA@XZ
	cmp	rbx, rdi
	jne	SHORT $LL42@catch$0
$LN41@catch$0:
; Line 485
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0??node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z@4HA ENDP ; `QList<QString>::node_copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?dealloc@?$QList@VQString@@@@AEAAXPEAUData@QListData@@@Z
_TEXT	SEGMENT
this$ = 48
data$ = 56
?dealloc@?$QList@VQString@@@@AEAAXPEAUData@QListData@@@Z PROC ; QList<QString>::dealloc, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qlist.h
; Line 867
$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 868
	movsxd	rdi, DWORD PTR [rdx+8]
	mov	rsi, rdx
	movsxd	rbx, DWORD PTR [rdx+12]
	add	rdi, 2
	add	rbx, 2
	lea	rdi, QWORD PTR [rdx+rdi*8]
	lea	rbx, QWORD PTR [rdx+rbx*8]
; Line 499
	cmp	rbx, rdi
	je	SHORT $LN7@dealloc
	npad	1
$LL21@dealloc:
	sub	rbx, 8
	mov	rcx, rbx
	call	QWORD PTR __imp_??1QString@@QEAA@XZ
	cmp	rbx, rdi
	jne	SHORT $LL21@dealloc
$LN7@dealloc:
; Line 870
	mov	rcx, rsi
; Line 871
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 870
	rex_jmp	QWORD PTR __imp_?dispose@QListData@@SAXPEAUData@1@@Z
?dealloc@?$QList@VQString@@@@AEAAXPEAUData@QListData@@@Z ENDP ; QList<QString>::dealloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$QList@VQString@@@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$QList@VQString@@@@QEAA@XZ PROC			; QList<QString>::~QList<QString>, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qlist.h
; Line 828
$LN89:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T1[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
; Line 829
	mov	rdx, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1360
	mov	eax, DWORD PTR [rdx]
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qrefcount.h
; Line 68
	test	eax, eax
	je	SHORT $LN86@QList
; Line 71
	cmp	eax, -1
	je	SHORT $LN2@QList
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	mov	eax, -1
	lock xadd DWORD PTR [rdx], eax
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; Line 271
	cmp	eax, 1
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qlist.h
; Line 829
	jne	SHORT $LN2@QList
$LN86@QList:
; Line 830
	mov	rsi, QWORD PTR [rcx]
; Line 868
	movsxd	rdi, DWORD PTR [rsi+8]
	add	rdi, 2
	lea	rdi, QWORD PTR [rsi+rdi*8]
	movsxd	rbx, DWORD PTR [rsi+12]
	add	rbx, 2
	lea	rbx, QWORD PTR [rsi+rbx*8]
; Line 499
	cmp	rbx, rdi
	je	SHORT $LN67@QList
	npad	11
$LL83@QList:
	sub	rbx, 8
	mov	rcx, rbx
	call	QWORD PTR __imp_??1QString@@QEAA@XZ
	npad	1
	cmp	rbx, rdi
	jne	SHORT $LL83@QList
$LN67@QList:
; Line 870
	mov	rcx, rsi
	call	QWORD PTR __imp_?dispose@QListData@@SAXPEAUData@1@@Z
	npad	1
$LN2@QList:
; Line 831
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1?$QList@VQString@@@@QEAA@XZ ENDP			; QList<QString>::~QList<QString>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$QList@VQString@@@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
l$ = 72
??0?$QList@VQString@@@@QEAA@AEBV0@@Z PROC		; QList<QString>::QList<QString>, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qlist.h
; Line 811
$LN67:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T1[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	rbx, rdx
	mov	rsi, rcx
; Line 810
	mov	rcx, QWORD PTR [rdx]
	mov	QWORD PTR [rsi], rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1360
	mov	eax, DWORD PTR [rcx]
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qrefcount.h
; Line 57
	test	eax, eax
	je	SHORT $LN64@QList
; Line 60
	cmp	eax, -1
	je	SHORT $LN7@QList
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	mov	eax, 1
	lock xadd DWORD PTR [rcx], eax
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qlist.h
; Line 824
	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN64@QList:
; Line 813
	mov	rax, QWORD PTR [rsi]
	mov	edx, DWORD PTR [rax+4]
	mov	rcx, rsi
	call	QWORD PTR __imp_?detach@QListData@@QEAAPEAUData@1@H@Z
	npad	1
; Line 816
	mov	rcx, rbx
	call	QWORD PTR __imp_?begin@QListData@@QEBAPEAPEAXXZ
	mov	rdi, rax
	mov	rcx, rsi
	call	QWORD PTR __imp_?end@QListData@@QEBAPEAPEAXXZ
	mov	rbx, rax
	mov	rcx, rsi
	call	QWORD PTR __imp_?begin@QListData@@QEBAPEAPEAXXZ
	mov	rdx, rax
	mov	r9, rdi
	mov	r8, rbx
	mov	rcx, rsi
	call	?node_copy@?$QList@VQString@@@@AEAAXPEAUNode@1@00@Z ; QList<QString>::node_copy
	npad	1
$LN7@QList:
; Line 824
	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN65@QList:
??0?$QList@VQString@@@@QEAA@AEBV0@@Z ENDP		; QList<QString>::QList<QString>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
l$ = 72
?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA PROC ; `QList<QString>::QList<QString>'::`1'::catch$0
; Line 819
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??0?$QList@VQString@@@@QEAA@AEBV0@@Z$0:
; Line 820
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR __imp_?dispose@QListData@@SAXPEAUData@1@@Z
; Line 821
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA ENDP ; `QList<QString>::QList<QString>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
l$ = 72
?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA PROC ; `QList<QString>::QList<QString>'::`1'::catch$0
; Line 819
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??0?$QList@VQString@@@@QEAA@AEBV0@@Z$0:
; Line 820
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR __imp_?dispose@QListData@@SAXPEAUData@1@@Z
; Line 821
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???0?$QList@VQString@@@@QEAA@AEBV0@@Z@4HA ENDP ; `QList<QString>::QList<QString>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$QListSpecialMethods@VQString@@@@IEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$QListSpecialMethods@VQString@@@@IEAA@XZ PROC	; QListSpecialMethods<QString>::~QListSpecialMethods<QString>, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qstringlist.h
; Line 69
	ret	0
??1?$QListSpecialMethods@VQString@@@@IEAA@XZ ENDP	; QListSpecialMethods<QString>::~QListSpecialMethods<QString>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GQString@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GQString@@QEAAPEAXI@Z PROC				; QString::`scalar deleting destructor', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx
	call	QWORD PTR __imp_??1QString@@QEAA@XZ
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 8
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GQString@@QEAAPEAXI@Z ENDP				; QString::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?deref@RefCount@QtPrivate@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?deref@RefCount@QtPrivate@@QEAA_NXZ PROC		; QtPrivate::RefCount::deref, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qrefcount.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1360
	mov	eax, DWORD PTR [rcx]
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qrefcount.h
; Line 68
	test	eax, eax
	jne	SHORT $LN2@deref
; Line 74
	ret	0
$LN2@deref:
; Line 71
	cmp	eax, -1
	jne	SHORT $LN3@deref
; Line 72
	mov	al, 1
; Line 74
	ret	0
$LN3@deref:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	mov	eax, -1
	lock xadd DWORD PTR [rcx], eax
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; Line 271
	cmp	eax, 1
	setne	al
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qrefcount.h
; Line 74
	ret	0
?deref@RefCount@QtPrivate@@QEAA_NXZ ENDP		; QtPrivate::RefCount::deref
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ref@RefCount@QtPrivate@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?ref@RefCount@QtPrivate@@QEAA_NXZ PROC			; QtPrivate::RefCount::ref, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qrefcount.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1360
	mov	eax, DWORD PTR [rcx]
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qrefcount.h
; Line 57
	test	eax, eax
	jne	SHORT $LN2@ref
; Line 63
	ret	0
$LN2@ref:
; Line 60
	cmp	eax, -1
	je	SHORT $LN46@ref
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	mov	eax, 1
	lock xadd DWORD PTR [rcx], eax
$LN46@ref:
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qrefcount.h
; Line 62
	mov	al, 1
; Line 63
	ret	0
?ref@RefCount@QtPrivate@@QEAA_NXZ ENDP			; QtPrivate::RefCount::ref
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?deref@?$QBasicAtomicInteger@H@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?deref@?$QBasicAtomicInteger@H@@QEAA_NXZ PROC		; QBasicAtomicInteger<int>::deref, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qbasicatomic.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	mov	eax, -1
	lock xadd DWORD PTR [rcx], eax
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; Line 271
	cmp	eax, 1
	setne	al
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qbasicatomic.h
; Line 115
	ret	0
?deref@?$QBasicAtomicInteger@H@@QEAA_NXZ ENDP		; QBasicAtomicInteger<int>::deref
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ref@?$QBasicAtomicInteger@H@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?ref@?$QBasicAtomicInteger@H@@QEAA_NXZ PROC		; QBasicAtomicInteger<int>::ref, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qbasicatomic.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	lock add DWORD PTR [rcx], 1
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qatomic_cxx11.h
; Line 265
	setne	al
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qbasicatomic.h
; Line 114
	ret	0
?ref@?$QBasicAtomicInteger@H@@QEAA_NXZ ENDP		; QBasicAtomicInteger<int>::ref
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?load@?$QBasicAtomicInteger@H@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?load@?$QBasicAtomicInteger@H@@QEBAHXZ PROC		; QBasicAtomicInteger<int>::load, COMDAT
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qbasicatomic.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1360
	mov	eax, DWORD PTR [rcx]
; File c:\qt\5.12.3\msvc2017_64\include\qtcore\qbasicatomic.h
; Line 103
	ret	0
?load@?$QBasicAtomicInteger@H@@QEBAHXZ ENDP		; QBasicAtomicInteger<int>::load
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?atomic_fetch_sub@std@@YAHPEAU_Atomic_int@1@H@Z
_TEXT	SEGMENT
_Atom$ = 8
_Value$ = 16
?atomic_fetch_sub@std@@YAHPEAU_Atomic_int@1@H@Z PROC	; std::atomic_fetch_sub, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1596
	neg	edx
; Line 1543
	lock xadd DWORD PTR [rcx], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 942
	mov	eax, edx
	ret	0
?atomic_fetch_sub@std@@YAHPEAU_Atomic_int@1@H@Z ENDP	; std::atomic_fetch_sub
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?atomic_fetch_sub_explicit@std@@YAHPEAU_Atomic_int@1@HW4memory_order@1@@Z
_TEXT	SEGMENT
_Atom$ = 8
_Value$ = 16
_Order$ = 24
?atomic_fetch_sub_explicit@std@@YAHPEAU_Atomic_int@1@HW4memory_order@1@@Z PROC ; std::atomic_fetch_sub_explicit, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 930
	mov	r9d, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1596
	neg	r9d
; Line 1571
	cmp	r8d, 5
	ja	SHORT $LN12@atomic_fet
	movsxd	rax, r8d
	lea	r8, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR $LN22@atomic_fet[r8+rax*4]
	add	rdx, r8
	jmp	rdx
$LN8@atomic_fet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 932
	lock xadd DWORD PTR [rcx], r9d
	mov	eax, r9d
	ret	0
$LN12@atomic_fet:
; Line 931
	xor	eax, eax
; Line 932
	ret	0
	npad	1
$LN22@atomic_fet:
	DD	$LN8@atomic_fet
	DD	$LN8@atomic_fet
	DD	$LN8@atomic_fet
	DD	$LN8@atomic_fet
	DD	$LN8@atomic_fet
	DD	$LN8@atomic_fet
?atomic_fetch_sub_explicit@std@@YAHPEAU_Atomic_int@1@HW4memory_order@1@@Z ENDP ; std::atomic_fetch_sub_explicit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?atomic_fetch_add@std@@YAHPEAU_Atomic_int@1@H@Z
_TEXT	SEGMENT
_Atom$ = 8
_Value$ = 16
?atomic_fetch_add@std@@YAHPEAU_Atomic_int@1@H@Z PROC	; std::atomic_fetch_add, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	lock xadd DWORD PTR [rcx], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 921
	mov	eax, edx
	ret	0
?atomic_fetch_add@std@@YAHPEAU_Atomic_int@1@H@Z ENDP	; std::atomic_fetch_add
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?atomic_fetch_add_explicit@std@@YAHPEAU_Atomic_int@1@HW4memory_order@1@@Z
_TEXT	SEGMENT
_Atom$ = 8
_Value$ = 16
_Order$ = 24
?atomic_fetch_add_explicit@std@@YAHPEAU_Atomic_int@1@HW4memory_order@1@@Z PROC ; std::atomic_fetch_add_explicit, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 909
	mov	r9d, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1571
	cmp	r8d, 5
	ja	SHORT $LN10@atomic_fet
	movsxd	rax, r8d
	lea	r8, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR $LN20@atomic_fet[r8+rax*4]
	add	rdx, r8
	jmp	rdx
$LN6@atomic_fet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 911
	lock xadd DWORD PTR [rcx], r9d
	mov	eax, r9d
	ret	0
$LN10@atomic_fet:
; Line 910
	xor	eax, eax
; Line 911
	ret	0
$LN20@atomic_fet:
	DD	$LN6@atomic_fet
	DD	$LN6@atomic_fet
	DD	$LN6@atomic_fet
	DD	$LN6@atomic_fet
	DD	$LN6@atomic_fet
	DD	$LN6@atomic_fet
?atomic_fetch_add_explicit@std@@YAHPEAU_Atomic_int@1@HW4memory_order@1@@Z ENDP ; std::atomic_fetch_add_explicit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?atomic_load_explicit@std@@YAHPEBU_Atomic_int@1@W4memory_order@1@@Z
_TEXT	SEGMENT
_Atom$ = 8
_Order$ = 16
?atomic_load_explicit@std@@YAHPEBU_Atomic_int@1@W4memory_order@1@@Z PROC ; std::atomic_load_explicit, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1357
	test	edx, edx
	je	SHORT $LN6@atomic_loa
	jle	SHORT $LN9@atomic_loa
	cmp	edx, 2
	jle	SHORT $LN7@atomic_loa
	cmp	edx, 5
	jne	SHORT $LN9@atomic_loa
$LN7@atomic_loa:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 496
	mov	eax, DWORD PTR [rcx]
	ret	0
$LN9@atomic_loa:
; Line 495
	xor	eax, eax
; Line 496
	ret	0
$LN6@atomic_loa:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1360
	mov	eax, DWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 496
	ret	0
?atomic_load_explicit@std@@YAHPEBU_Atomic_int@1@W4memory_order@1@@Z ENDP ; std::atomic_load_explicit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??F_Atomic_int@std@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
??F_Atomic_int@std@@QEAAHXZ PROC			; std::_Atomic_int::operator--, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	mov	eax, -1
	lock xadd DWORD PTR [rcx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 1046
	dec	eax
	ret	0
??F_Atomic_int@std@@QEAAHXZ ENDP			; std::_Atomic_int::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??E_Atomic_int@std@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
??E_Atomic_int@std@@QEAAHXZ PROC			; std::_Atomic_int::operator++, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	mov	eax, 1
	lock xadd DWORD PTR [rcx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 1036
	inc	eax
	ret	0
??E_Atomic_int@std@@QEAAHXZ ENDP			; std::_Atomic_int::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?load@_Atomic_int@std@@QEBAHW4memory_order@2@@Z
_TEXT	SEGMENT
this$ = 8
_Order$ = 16
?load@_Atomic_int@std@@QEBAHW4memory_order@2@@Z PROC	; std::_Atomic_int::load, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1357
	test	edx, edx
	je	SHORT $LN8@load
	jle	SHORT $LN11@load
	cmp	edx, 2
	jle	SHORT $LN9@load
	cmp	edx, 5
	jne	SHORT $LN11@load
$LN9@load:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 630
	mov	eax, DWORD PTR [rcx]
	ret	0
$LN11@load:
; Line 629
	xor	eax, eax
; Line 630
	ret	0
$LN8@load:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1360
	mov	eax, DWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xxatomic
; Line 630
	ret	0
?load@_Atomic_int@std@@QEBAHW4memory_order@2@@Z ENDP	; std::_Atomic_int::load
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Atomic_fetch_sub_4@std@@YAKPECKKW4memory_order@1@@Z
_TEXT	SEGMENT
_Tgt$ = 8
_Value$ = 16
_Order$ = 24
?_Atomic_fetch_sub_4@std@@YAKPECKKW4memory_order@1@@Z PROC ; std::_Atomic_fetch_sub_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1595
	mov	r9d, edx
; Line 1596
	neg	r9d
; Line 1571
	cmp	r8d, 5
	ja	SHORT $LN10@Atomic_fet
	movsxd	rax, r8d
	lea	r8, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR $LN20@Atomic_fet[r8+rax*4]
	add	rdx, r8
	jmp	rdx
$LN6@Atomic_fet:
; Line 1597
	lock xadd DWORD PTR [rcx], r9d
	mov	eax, r9d
	ret	0
$LN10@Atomic_fet:
; Line 1596
	xor	eax, eax
; Line 1597
	ret	0
	npad	1
$LN20@Atomic_fet:
	DD	$LN6@Atomic_fet
	DD	$LN6@Atomic_fet
	DD	$LN6@Atomic_fet
	DD	$LN6@Atomic_fet
	DD	$LN6@Atomic_fet
	DD	$LN6@Atomic_fet
?_Atomic_fetch_sub_4@std@@YAKPECKKW4memory_order@1@@Z ENDP ; std::_Atomic_fetch_sub_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Atomic_fetch_add_4@std@@YAKPECKKW4memory_order@1@@Z
_TEXT	SEGMENT
_Tgt$ = 8
_Value$ = 16
_Order$ = 24
?_Atomic_fetch_add_4@std@@YAKPECKKW4memory_order@1@@Z PROC ; std::_Atomic_fetch_add_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1571
	cmp	r8d, 5
	ja	SHORT $LN8@Atomic_fet
	movsxd	rax, r8d
	lea	r9, OFFSET FLAT:__ImageBase
	mov	r8d, DWORD PTR $LN18@Atomic_fet[r9+rax*4]
	add	r8, r9
	jmp	r8
$LN4@Atomic_fet:
; Line 1591
	lock xadd DWORD PTR [rcx], edx
	mov	eax, edx
	ret	0
$LN8@Atomic_fet:
; Line 1589
	xor	eax, eax
; Line 1591
	ret	0
$LN18@Atomic_fet:
	DD	$LN4@Atomic_fet
	DD	$LN4@Atomic_fet
	DD	$LN4@Atomic_fet
	DD	$LN4@Atomic_fet
	DD	$LN4@Atomic_fet
	DD	$LN4@Atomic_fet
?_Atomic_fetch_add_4@std@@YAKPECKKW4memory_order@1@@Z ENDP ; std::_Atomic_fetch_add_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Fetch_add_release_4@std@@YAKPECKK@Z
_TEXT	SEGMENT
_Tgt$ = 8
_Value$ = 16
?_Fetch_add_release_4@std@@YAKPECKK@Z PROC		; std::_Fetch_add_release_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1564
	lock xadd DWORD PTR [rcx], edx
	mov	eax, edx
; Line 1566
	ret	0
?_Fetch_add_release_4@std@@YAKPECKK@Z ENDP		; std::_Fetch_add_release_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Fetch_add_acquire_4@std@@YAKPECKK@Z
_TEXT	SEGMENT
_Tgt$ = 8
_Value$ = 16
?_Fetch_add_acquire_4@std@@YAKPECKK@Z PROC		; std::_Fetch_add_acquire_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1557
	lock xadd DWORD PTR [rcx], edx
	mov	eax, edx
; Line 1559
	ret	0
?_Fetch_add_acquire_4@std@@YAKPECKK@Z ENDP		; std::_Fetch_add_acquire_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Fetch_add_relaxed_4@std@@YAKPECKK@Z
_TEXT	SEGMENT
_Tgt$ = 8
_Value$ = 16
?_Fetch_add_relaxed_4@std@@YAKPECKK@Z PROC		; std::_Fetch_add_relaxed_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1550
	lock xadd DWORD PTR [rcx], edx
	mov	eax, edx
; Line 1552
	ret	0
?_Fetch_add_relaxed_4@std@@YAKPECKK@Z ENDP		; std::_Fetch_add_relaxed_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Fetch_add_seq_cst_4@std@@YAKPECKK@Z
_TEXT	SEGMENT
_Tgt$ = 8
_Value$ = 16
?_Fetch_add_seq_cst_4@std@@YAKPECKK@Z PROC		; std::_Fetch_add_seq_cst_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1543
	lock xadd DWORD PTR [rcx], edx
	mov	eax, edx
; Line 1545
	ret	0
?_Fetch_add_seq_cst_4@std@@YAKPECKK@Z ENDP		; std::_Fetch_add_seq_cst_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Atomic_load_4@std@@YAKPECKW4memory_order@1@@Z
_TEXT	SEGMENT
_Tgt$ = 8
_Order$ = 16
?_Atomic_load_4@std@@YAKPECKW4memory_order@1@@Z PROC	; std::_Atomic_load_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1357
	test	edx, edx
	je	SHORT $LN4@Atomic_loa
	jle	SHORT $LN7@Atomic_loa
	cmp	edx, 2
	jle	SHORT $LN5@Atomic_loa
	cmp	edx, 5
	jne	SHORT $LN7@Atomic_loa
$LN5@Atomic_loa:
; Line 1375
	mov	eax, DWORD PTR [rcx]
	ret	0
$LN7@Atomic_loa:
; Line 1373
	xor	eax, eax
; Line 1375
	ret	0
$LN4@Atomic_loa:
; Line 1341
	mov	eax, DWORD PTR [rcx]
; Line 1375
	ret	0
?_Atomic_load_4@std@@YAKPECKW4memory_order@1@@Z ENDP	; std::_Atomic_load_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Load_acquire_4@std@@YAKPECK@Z
_TEXT	SEGMENT
_Tgt$ = 8
?_Load_acquire_4@std@@YAKPECK@Z PROC			; std::_Load_acquire_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1325
	mov	eax, DWORD PTR [rcx]
; Line 1352
	ret	0
?_Load_acquire_4@std@@YAKPECK@Z ENDP			; std::_Load_acquire_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Load_relaxed_4@std@@YAKPECK@Z
_TEXT	SEGMENT
_Tgt$ = 8
?_Load_relaxed_4@std@@YAKPECK@Z PROC			; std::_Load_relaxed_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1341
	mov	eax, DWORD PTR [rcx]
; Line 1345
	ret	0
?_Load_relaxed_4@std@@YAKPECK@Z ENDP			; std::_Load_relaxed_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Load_seq_cst_4@std@@YAKPECK@Z
_TEXT	SEGMENT
_Tgt$ = 8
?_Load_seq_cst_4@std@@YAKPECK@Z PROC			; std::_Load_seq_cst_4, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xatomic.h
; Line 1325
	mov	eax, DWORD PTR [rcx]
; Line 1330
	ret	0
?_Load_seq_cst_4@std@@YAKPECK@Z ENDP			; std::_Load_seq_cst_4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
; Line 187
	mov	rax, rdx
; Line 188
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
END
